import streamlit as st
import random

# T√≠tulo institucional
st.title("üß™ III Avalia√ß√£o - Disciplina de Farmacologia")
st.markdown("""
**UNIVERSIDADE FEDERAL DE CAMPINA GRANDE**  
**CENTRO DE FORMA√á√ÉO DE PROFESSORES**  
**UNIDADE ACAD√äMICA DE ENFERMAGEM**  
DISCIPLINA DE FARMACOLOGIA  
III AVALIA√á√ÉO
""")

st.subheader("Jogo Interativo: Anti-hipertensivos")
st.markdown("Responda corretamente para desbloquear a pr√≥xima pergunta. Erros adicionam uma nova quest√£o √† fila. M√°ximo de 20 perguntas.")

# Banco de perguntas
questions = [
    ("A _______ atua como agonista Œ±2-central, reduzindo a atividade simp√°tica e a press√£o arterial, mas sua interrup√ß√£o abrupta pode causar hipertens√£o de rebote.", "clonidina"),
    ("Os _______ s√£o frequentemente indicados como terapia inicial para hipertens√£o devido ao seu baixo custo, efic√°cia e efeito protetor cardiovascular.", "diur√©ticos"),
    ("A administra√ß√£o de um diur√©tico _______ pode resultar em hipopotassemia e hiperglicemia como efeitos adversos comuns.", "tiaz√≠dico"),
    ("A _______ √© uma subst√¢ncia fundamental para a ativa√ß√£o do sistema renina-angiotensina-aldosterona.", "renina"),
    ("Os f√°rmacos conhecidos como _______ bloqueiam os efeitos da angiotensina II nos receptores AT1.", "bras"),
    ("A _______ √© uma condi√ß√£o onde a press√£o permanece elevada apesar do uso de tr√™s f√°rmacos, incluindo um diur√©tico.", "hipertens√£o resistente"),
    ("A _______ pode ser causada pelo uso de diur√©ticos tiaz√≠dicos e deve ser monitorada em pacientes com risco de diabetes.", "hiperglicemia"),
    ("O bloqueio de receptores Œ±1 pela _______ pode levar √† hipotens√£o postural ap√≥s a primeira dose.", "prazosina"),
    ("A angiotensina II promove a _______ de s√≥dio nos t√∫bulos renais.", "reabsor√ß√£o"),
    ("A ativa√ß√£o dos _______ promove resposta r√°pida √† queda de press√£o arterial.", "barorreceptores"),
    ("Um paciente em uso de hidroclorotiazida e enalapril apresenta fraqueza e pot√°ssio de 3,0 mEq/L. Isso indica _______.", "hipopotassemia"),
    ("Tosse seca como efeito adverso de IECA est√° relacionada √† inibi√ß√£o da _______.", "iecas"),
    ("A _______ estimula reabsor√ß√£o de s√≥dio e excre√ß√£o de pot√°ssio.", "aldosterona"),
    ("O uso de _______ √© contraindicado em asm√°ticos pela broncoconstri√ß√£o reflexa.", "Œ≤-bloqueadores"),
    ("O f√°rmaco mais indicado para hipertens√£o gestacional, apesar da seda√ß√£o, √© a _______.", "metildopa"),
    ("A _______ √© preferida na via sublingual para crises hipertensivas.", "nitroglicerina")
]

# Inicializa√ß√£o de estados
if 'queue' not in st.session_state:
    st.session_state.queue = random.sample(questions, 5)
    st.session_state.answered = []
    st.session_state.max_questions = 20
    st.session_state.index = 0
    st.session_state.feedback = ""

# Se ainda houver perguntas
if st.session_state.queue:
    q, a = st.session_state.queue[0]
    st.write(f"**Pergunta:** {q}")

    user_answer = st.text_input("Sua resposta (min√∫sculas, sem acento):", key="user_input")

    if st.button("Enviar resposta"):
        if user_answer.strip().lower() == a:
            st.success("‚úÖ Correto!")
            st.session_state.answered.append((q, user_answer))
            st.session_state.queue.pop(0)
        else:
            st.error(f"‚ùå Errado! A resposta correta era: {a}")
            st.session_state.answered.append((q, user_answer))
            if len(st.session_state.answered) < st.session_state.max_questions:
                extras = [x for x in questions if x not in st.session_state.queue and x not in st.session_state.answered]
                if extras:
                    st.session_state.queue.append(random.choice(extras))
            st.session_state.queue.pop(0)

        # Limpa a entrada para a pr√≥xima quest√£o
        st.experimental_set_query_params()
        st.experimental_rerun()

    st.markdown(f"**Progresso:** {len(st.session_state.answered)} respondidas ‚Ä¢ {len(st.session_state.queue)} restantes")

else:
    st.success(f"üèÅ Fim da avalia√ß√£o! Voc√™ respondeu {len(st.session_state.answered)} quest√µes.")
